{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////Users/crbelaus/Projects/frankt/node_modules/deep-compact/index.js","webpack:////Users/crbelaus/Projects/frankt/node_modules/deep-filter/index.js","webpack:////Users/crbelaus/Projects/frankt/node_modules/is-plain-object/index.js","webpack:////Users/crbelaus/Projects/frankt/node_modules/isobject/index.js","webpack:////Users/crbelaus/Projects/frankt/node_modules/phoenix/priv/static/phoenix.js","webpack:////Users/crbelaus/Projects/frankt/priv/static/dom.js","webpack:////Users/crbelaus/Projects/frankt/priv/static/frankt.js","webpack:///./app.js","webpack:///./app.scss?9515"],"names":["k_r_submitter","k_r_success_contrls","brackets","Element","prototype","matches","msMatchesSelector","needValidation","element","target","dataset","franktNoValidate","undefined","nodeName","checkValidity","parse_keys","string","keys","prefix","children","RegExp","match","exec","push","hash_assign","result","value","length","key","shift","between","Array","isArray","_values","index","isNaN","serializer","existing","serialize","form","options","elements","radio_store","i","disabled","name","test","type","val","checked","empty","selectOptions","isSelectedOptions","j","option","allowedEmpty","hasValue","selected","slice","deepCompact","serializeElement","console","log","blockSubmit","e","preventDefault","removeEventListener","channel","sendMsg","action","data","serializeForm","tagName","franktData","JSON","parse","franktTarget","document","querySelector","addEventListener","reportValidity","hash","Object","assign","handleEvent","selector","closest","franktAction","attachResponses","on","res","window","location","outerHTML","html","insertAdjacentHTML","querySelectorAll","classList","klass","attachEvents","connect","channel_name","socket_params","socket","params","join","receive","onload","channel_tag","locale","getAttribute","Frankt","content"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;AClFA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACpCA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACXA;AACA;AACA,SAC6C;AAC7C,CAAC;AACD;;AAEA;AACA;AACA,CAAC;;AAED,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q,kCAAkC,iCAAiC,eAAe,eAAe,gBAAgB,oBAAoB,MAAM,0CAA0C,+BAA+B,aAAa,qBAAqB,mCAAmC,EAAE,EAAE,cAAc,WAAW,UAAU,EAAE,UAAU,MAAM,yCAAyC,EAAE,UAAU,kBAAkB,EAAE,EAAE,aAAa,EAAE,2BAA2B,0BAA0B,YAAY,EAAE,2CAA2C,8BAA8B,EAAE,OAAO,6EAA6E,EAAE,GAAG,EAAE;;AAErpB,gCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kCAAkC,0BAA0B,0CAA0C,gBAAgB,OAAO,kBAAkB,EAAE,aAAa,EAAE,OAAO,wBAAwB,EAAE;;AAEjM,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS,kBAAkB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,iBAAiB;AAClE;AACA;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA,QAAQ;AACR;AACA,0BAA0B,SAAS;AACnC,6BAA6B,OAAO;AACpwBAAwB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,wBAAwB,6CAA6C;AACrE,QAAQ;AACR;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO,sCAAsC,aAAa;AACrE,WAAW,OAAO;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,qCAAqC;AAC/D;AACA;;AAEA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,mCAAmC;AACnC,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,2CAA2C,qCAAqC;AAChF;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA,0BAA0B,mCAAmC;AAC7D;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,kCAAkC;AAClC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iEAAiE,iEAAiE;AAClI;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,6EAA6E;AAClG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,iCAAiC,gBAAgB,KAAK,IAAI,IAAI;AAC9D;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,kFAAkF,WAAW;AAC7F;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO,4DAA4D,mBAAmB;AACrG;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAyC,6BAA6B;AACtE;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kDAAkD,iCAAiC;AACpG;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC;AACjC,kCAAkC;AAClC,oCAAoC;AACpC,kCAAkC;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mDAAmD,oBAAoB;AACvE;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,YAAY;AACpD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,OAAO;AACP;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED,eAAe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,iCAAiC,+BAA+B;AAChE,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,GAAG;;;AAGH;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA,CAAC;;AAED,CAAC;;;;;;;;;;;;;;;;;;;;;ACt5CD;;AAEA,IAAMA,gBAAgB,uCAAtB;AACA,IAAMC,sBAAsB,oCAA5B;AACA,IAAMC,WAAW,iBAAjB;;AAEA;AACA,IAAI,CAACC,QAAQC,SAAR,CAAkBC,OAAvB,EAAgCF,QAAQC,SAAR,CAAkBC,OAAlB,GAA4BF,QAAQC,SAAR,CAAkBE,iBAA9C;;AAEzB,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,MAAjC,EAAyC;AAC9C,MAAID,QAAQE,OAAR,CAAgBC,gBAAhB,KAAqCC,SAAzC,EAAoD,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","file":"js/app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/*jshint eqeqeq:false*/\n\n'use strict';\n\nvar isPlainObject = require('is-plain-object');\nvar filter = require('deep-filter');\n\nfunction compact(value) {\n    return filter(value, notEmpty);\n}\n\nfunction notEmpty(value, prop, subject) {\n    var key;\n\n    if (Array.isArray(value)) {\n        return value.length > 0;\n    }\n\n    if (isPlainObject(value)) {\n        for (key in value) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (typeof value === 'string') {\n        value = subject[prop] = value.trim();\n\n        return value.length > 0;\n    }\n\n    return value != null;\n}\n\nmodule.exports = compact;\nmodule.exports.notEmpty = notEmpty;\n","'use strict';\n\nvar isPlainObject = require('is-plain-object');\n\nfunction filter(value, fn) {\n    if (Array.isArray(value)) {\n        return filterArray(value, fn);\n    } else if (isPlainObject(value)) {\n        return filterObject(value, fn);\n    }\n\n    return value;\n}\n\nfunction filterObject(obj, fn) {\n    var newObj = {};\n    var key;\n    var value;\n\n    for (key in obj) {\n        value = filter(obj[key], fn);\n\n        if (fn.call(obj, value, key, obj)) {\n            if (value !== obj[key] && !isCollection(value)) {\n                value = obj[key];\n            }\n\n            newObj[key] = value;\n        }\n    }\n\n    return newObj;\n}\n\nfunction filterArray(array, fn) {\n    var filtered = [];\n\n    array.forEach(function (value, index, array) {\n        value = filter(value, fn);\n\n        if (fn.call(array, value, index, array)) {\n            if (value !== array[index] && !isCollection(value)) {\n                value = array[index];\n            }\n\n            filtered.push(value);\n        }\n    });\n\n    return filtered;\n}\n\nfunction isCollection(value) {\n    return Array.isArray(value) || isPlainObject(value);\n}\n\nmodule.exports = filter;\n","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nmodule.exports = function isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObjectObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n};\n","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n","(function (global, factory) {\ntypeof exports === 'object' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\nfactory(global.Phoenix = global.Phoenix || {});\n}(this, (function (exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Phoenix Channels JavaScript client\n *\n * ## Socket Connection\n *\n * A single connection is established to the server and\n * channels are multiplexed over the connection.\n * Connect to the server using the `Socket` class:\n *\n * ```javascript\n *     let socket = new Socket(\"/socket\", {params: {userToken: \"123\"}})\n *     socket.connect()\n * ```\n *\n * The `Socket` constructor takes the mount point of the socket,\n * the authentication params, as well as options that can be found in\n * the Socket docs, such as configuring the `LongPoll` transport, and\n * heartbeat.\n *\n * ## Channels\n *\n * Channels are isolated, concurrent processes on the server that\n * subscribe to topics and broker events between the client and server.\n * To join a channel, you must provide the topic, and channel params for\n * authorization. Here's an example chat room example where `\"new_msg\"`\n * events are listened for, messages are pushed to the server, and\n * the channel is joined with ok/error/timeout matches:\n *\n * ```javascript\n *     let channel = socket.channel(\"room:123\", {token: roomToken})\n *     channel.on(\"new_msg\", msg => console.log(\"Got message\", msg) )\n *     $input.onEnter( e => {\n *       channel.push(\"new_msg\", {body: e.target.val}, 10000)\n *        .receive(\"ok\", (msg) => console.log(\"created message\", msg) )\n *        .receive(\"error\", (reasons) => console.log(\"create failed\", reasons) )\n *        .receive(\"timeout\", () => console.log(\"Networking issue...\") )\n *     })\n *     channel.join()\n *       .receive(\"ok\", ({messages}) => console.log(\"catching up\", messages) )\n *       .receive(\"error\", ({reason}) => console.log(\"failed join\", reason) )\n *       .receive(\"timeout\", () => console.log(\"Networking issue. Still waiting...\") )\n *```\n *\n * ## Joining\n *\n * Creating a channel with `socket.channel(topic, params)`, binds the params to\n * `channel.params`, which are sent up on `channel.join()`.\n * Subsequent rejoins will send up the modified params for\n * updating authorization params, or passing up last_message_id information.\n * Successful joins receive an \"ok\" status, while unsuccessful joins\n * receive \"error\".\n *\n * ## Duplicate Join Subscriptions\n *\n * While the client may join any number of topics on any number of channels,\n * the client may only hold a single subscription for each unique topic at any\n * given time. When attempting to create a duplicate subscription,\n * the server will close the existing channel, log a warning, and\n * spawn a new channel for the topic. The client will have their\n * `channel.onClose` callbacks fired for the existing channel, and the new\n * channel join will have its receive hooks processed as normal.\n *\n * ## Pushing Messages\n *\n * From the previous example, we can see that pushing messages to the server\n * can be done with `channel.push(eventName, payload)` and we can optionally\n * receive responses from the push. Additionally, we can use\n * `receive(\"timeout\", callback)` to abort waiting for our other `receive` hooks\n *  and take action after some period of waiting. The default timeout is 5000ms.\n *\n *\n * ## Socket Hooks\n *\n * Lifecycle events of the multiplexed connection can be hooked into via\n * `socket.onError()` and `socket.onClose()` events, ie:\n *\n * ```javascript\n *     socket.onError( () => console.log(\"there was an error with the connection!\") )\n *     socket.onClose( () => console.log(\"the connection dropped\") )\n * ```\n *\n *\n * ## Channel Hooks\n *\n * For each joined channel, you can bind to `onError` and `onClose` events\n * to monitor the channel lifecycle, ie:\n *\n * ```javascript\n *     channel.onError( () => console.log(\"there was an error!\") )\n *     channel.onClose( () => console.log(\"the channel has gone away gracefully\") )\n * ```\n *\n * ### onError hooks\n *\n * `onError` hooks are invoked if the socket connection drops, or the channel\n * crashes on the server. In either case, a channel rejoin is attempted\n * automatically in an exponential backoff manner.\n *\n * ### onClose hooks\n *\n * `onClose` hooks are invoked only in two cases. 1) the channel explicitly\n * closed on the server, or 2). The client explicitly closed, by calling\n * `channel.leave()`\n *\n *\n * ## Presence\n *\n * The `Presence` object provides features for syncing presence information\n * from the server with the client and handling presences joining and leaving.\n *\n * ### Syncing initial state from the server\n *\n * `Presence.syncState` is used to sync the list of presences on the server\n * with the client's state. An optional `onJoin` and `onLeave` callback can\n * be provided to react to changes in the client's local presences across\n * disconnects and reconnects with the server.\n *\n * `Presence.syncDiff` is used to sync a diff of presence join and leave\n * events from the server, as they happen. Like `syncState`, `syncDiff`\n * accepts optional `onJoin` and `onLeave` callbacks to react to a user\n * joining or leaving from a device.\n *\n * ### Listing Presences\n *\n * `Presence.list` is used to return a list of presence information\n * based on the local state of metadata. By default, all presence\n * metadata is returned, but a `listBy` function can be supplied to\n * allow the client to select which metadata to use for a given presence.\n * For example, you may have a user online from different devices with\n * a metadata status of \"online\", but they have set themselves to \"away\"\n * on another device. In this case, the app may choose to use the \"away\"\n * status for what appears on the UI. The example below defines a `listBy`\n * function which prioritizes the first metadata which was registered for\n * each user. This could be the first tab they opened, or the first device\n * they came online from:\n *\n * ```javascript\n *     let state = {}\n *     state = Presence.syncState(state, stateFromServer)\n *     let listBy = (id, {metas: [first, ...rest]}) => {\n *       first.count = rest.length + 1 // count of this user's presences\n *       first.id = id\n *       return first\n *     }\n *     let onlineUsers = Presence.list(state, listBy)\n * ```\n *\n *\n * ### Example Usage\n *```javascript\n *     // detect if user has joined for the 1st time or from another tab/device\n *     let onJoin = (id, current, newPres) => {\n *       if(!current){\n *         console.log(\"user has entered for the first time\", newPres)\n *       } else {\n *         console.log(\"user additional presence\", newPres)\n *       }\n *     }\n *     // detect if user has left from all tabs/devices, or is still present\n *     let onLeave = (id, current, leftPres) => {\n *       if(current.metas.length === 0){\n *         console.log(\"user has left from all devices\", leftPres)\n *       } else {\n *         console.log(\"user left from a device\", leftPres)\n *       }\n *     }\n *     let presences = {} // client's initial empty presence state\n *     // receive initial presence data from server, sent after join\n *     myChannel.on(\"presence_state\", state => {\n *       presences = Presence.syncState(presences, state, onJoin, onLeave)\n *       displayUsers(Presence.list(presences))\n *     })\n *     // receive \"presence_diff\" from server, containing join/leave events\n *     myChannel.on(\"presence_diff\", diff => {\n *       presences = Presence.syncDiff(presences, diff, onJoin, onLeave)\n *       this.setState({users: Presence.list(room.presences, listBy)})\n *     })\n * ```\n * @module phoenix\n */\n\nvar VSN = \"2.0.0\";\nvar SOCKET_STATES = { connecting: 0, open: 1, closing: 2, closed: 3 };\nvar DEFAULT_TIMEOUT = 10000;\nvar WS_CLOSE_NORMAL = 1000;\nvar CHANNEL_STATES = {\n  closed: \"closed\",\n  errored: \"errored\",\n  joined: \"joined\",\n  joining: \"joining\",\n  leaving: \"leaving\"\n};\nvar CHANNEL_EVENTS = {\n  close: \"phx_close\",\n  error: \"phx_error\",\n  join: \"phx_join\",\n  reply: \"phx_reply\",\n  leave: \"phx_leave\"\n};\nvar CHANNEL_LIFECYCLE_EVENTS = [CHANNEL_EVENTS.close, CHANNEL_EVENTS.error, CHANNEL_EVENTS.join, CHANNEL_EVENTS.reply, CHANNEL_EVENTS.leave];\nvar TRANSPORTS = {\n  longpoll: \"longpoll\",\n  websocket: \"websocket\"\n};\n\n/**\n * Initializes the Push\n * @param {Channel} channel - The Channel\n * @param {string} event - The event, for example `\"phx_join\"`\n * @param {Object} payload - The payload, for example `{user_id: 123}`\n * @param {number} timeout - The push timeout in milliseconds\n */\n\nvar Push = function () {\n  function Push(channel, event, payload, timeout) {\n    _classCallCheck(this, Push);\n\n    this.channel = channel;\n    this.event = event;\n    this.payload = payload || {};\n    this.receivedResp = null;\n    this.timeout = timeout;\n    this.timeoutTimer = null;\n    this.recHooks = [];\n    this.sent = false;\n  }\n\n  /**\n   *\n   * @param {number} timeout\n   */\n\n\n  _createClass(Push, [{\n    key: \"resend\",\n    value: function resend(timeout) {\n      this.timeout = timeout;\n      this.reset();\n      this.send();\n    }\n\n    /**\n     *\n     */\n\n  }, {\n    key: \"send\",\n    value: function send() {\n      if (this.hasReceived(\"timeout\")) {\n        return;\n      }\n      this.startTimeout();\n      this.sent = true;\n      this.channel.socket.push({\n        topic: this.channel.topic,\n        event: this.event,\n        payload: this.payload,\n        ref: this.ref,\n        join_ref: this.channel.joinRef()\n      });\n    }\n\n    /**\n     *\n     * @param {*} status\n     * @param {*} callback\n     */\n\n  }, {\n    key: \"receive\",\n    value: function receive(status, callback) {\n      if (this.hasReceived(status)) {\n        callback(this.receivedResp.response);\n      }\n\n      this.recHooks.push({ status: status, callback: callback });\n      return this;\n    }\n\n    // private\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.cancelRefEvent();\n      this.ref = null;\n      this.refEvent = null;\n      this.receivedResp = null;\n      this.sent = false;\n    }\n  }, {\n    key: \"matchReceive\",\n    value: function matchReceive(_ref) {\n      var status = _ref.status,\n          response = _ref.response,\n          ref = _ref.ref;\n\n      this.recHooks.filter(function (h) {\n        return h.status === status;\n      }).forEach(function (h) {\n        return h.callback(response);\n      });\n    }\n  }, {\n    key: \"cancelRefEvent\",\n    value: function cancelRefEvent() {\n      if (!this.refEvent) {\n        return;\n      }\n      this.channel.off(this.refEvent);\n    }\n  }, {\n    key: \"cancelTimeout\",\n    value: function cancelTimeout() {\n      clearTimeout(this.timeoutTimer);\n      this.timeoutTimer = null;\n    }\n  }, {\n    key: \"startTimeout\",\n    value: function startTimeout() {\n      var _this = this;\n\n      if (this.timeoutTimer) {\n        this.cancelTimeout();\n      }\n      this.ref = this.channel.socket.makeRef();\n      this.refEvent = this.channel.replyEventName(this.ref);\n\n      this.channel.on(this.refEvent, function (payload) {\n        _this.cancelRefEvent();\n        _this.cancelTimeout();\n        _this.receivedResp = payload;\n        _this.matchReceive(payload);\n      });\n\n      this.timeoutTimer = setTimeout(function () {\n        _this.trigger(\"timeout\", {});\n      }, this.timeout);\n    }\n  }, {\n    key: \"hasReceived\",\n    value: function hasReceived(status) {\n      return this.receivedResp && this.receivedResp.status === status;\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(status, response) {\n      this.channel.trigger(this.refEvent, { status: status, response: response });\n    }\n  }]);\n\n  return Push;\n}();\n\n/**\n *\n * @param {string} topic\n * @param {Object} params\n * @param {Socket} socket\n */\n\n\nvar Channel = exports.Channel = function () {\n  function Channel(topic, params, socket) {\n    var _this2 = this;\n\n    _classCallCheck(this, Channel);\n\n    this.state = CHANNEL_STATES.closed;\n    this.topic = topic;\n    this.params = params || {};\n    this.socket = socket;\n    this.bindings = [];\n    this.timeout = this.socket.timeout;\n    this.joinedOnce = false;\n    this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n    this.pushBuffer = [];\n    this.rejoinTimer = new Timer(function () {\n      return _this2.rejoinUntilConnected();\n    }, this.socket.reconnectAfterMs);\n    this.joinPush.receive(\"ok\", function () {\n      _this2.state = CHANNEL_STATES.joined;\n      _this2.rejoinTimer.reset();\n      _this2.pushBuffer.forEach(function (pushEvent) {\n        return pushEvent.send();\n      });\n      _this2.pushBuffer = [];\n    });\n    this.onClose(function () {\n      _this2.rejoinTimer.reset();\n      _this2.socket.log(\"channel\", \"close \" + _this2.topic + \" \" + _this2.joinRef());\n      _this2.state = CHANNEL_STATES.closed;\n      _this2.socket.remove(_this2);\n    });\n    this.onError(function (reason) {\n      if (_this2.isLeaving() || _this2.isClosed()) {\n        return;\n      }\n      _this2.socket.log(\"channel\", \"error \" + _this2.topic, reason);\n      _this2.state = CHANNEL_STATES.errored;\n      _this2.rejoinTimer.scheduleTimeout();\n    });\n    this.joinPush.receive(\"timeout\", function () {\n      if (!_this2.isJoining()) {\n        return;\n      }\n      _this2.socket.log(\"channel\", \"timeout \" + _this2.topic + \" (\" + _this2.joinRef() + \")\", _this2.joinPush.timeout);\n      var leavePush = new Push(_this2, CHANNEL_EVENTS.leave, {}, _this2.timeout);\n      leavePush.send();\n      _this2.state = CHANNEL_STATES.errored;\n      _this2.joinPush.reset();\n      _this2.rejoinTimer.scheduleTimeout();\n    });\n    this.on(CHANNEL_EVENTS.reply, function (payload, ref) {\n      _this2.trigger(_this2.replyEventName(ref), payload);\n    });\n  }\n\n  _createClass(Channel, [{\n    key: \"rejoinUntilConnected\",\n    value: function rejoinUntilConnected() {\n      this.rejoinTimer.scheduleTimeout();\n      if (this.socket.isConnected()) {\n        this.rejoin();\n      }\n    }\n  }, {\n    key: \"join\",\n    value: function join() {\n      var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.timeout;\n\n      if (this.joinedOnce) {\n        throw \"tried to join multiple times. 'join' can only be called a single time per channel instance\";\n      } else {\n        this.joinedOnce = true;\n        this.rejoin(timeout);\n        return this.joinPush;\n      }\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(callback) {\n      this.on(CHANNEL_EVENTS.close, callback);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(callback) {\n      this.on(CHANNEL_EVENTS.error, function (reason) {\n        return callback(reason);\n      });\n    }\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      this.bindings.push({ event: event, callback: callback });\n    }\n  }, {\n    key: \"off\",\n    value: function off(event) {\n      this.bindings = this.bindings.filter(function (bind) {\n        return bind.event !== event;\n      });\n    }\n  }, {\n    key: \"canPush\",\n    value: function canPush() {\n      return this.socket.isConnected() && this.isJoined();\n    }\n  }, {\n    key: \"push\",\n    value: function push(event, payload) {\n      var timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.timeout;\n\n      if (!this.joinedOnce) {\n        throw \"tried to push '\" + event + \"' to '\" + this.topic + \"' before joining. Use channel.join() before pushing events\";\n      }\n      var pushEvent = new Push(this, event, payload, timeout);\n      if (this.canPush()) {\n        pushEvent.send();\n      } else {\n        pushEvent.startTimeout();\n        this.pushBuffer.push(pushEvent);\n      }\n\n      return pushEvent;\n    }\n\n    /** Leaves the channel\n     *\n     * Unsubscribes from server events, and\n     * instructs channel to terminate on server\n     *\n     * Triggers onClose() hooks\n     *\n     * To receive leave acknowledgements, use the a `receive`\n     * hook to bind to the server ack, ie:\n     *\n     * ```javascript\n     *     channel.leave().receive(\"ok\", () => alert(\"left!\") )\n     * ```\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave() {\n      var _this3 = this;\n\n      var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.timeout;\n\n      this.state = CHANNEL_STATES.leaving;\n      var onClose = function onClose() {\n        _this3.socket.log(\"channel\", \"leave \" + _this3.topic);\n        _this3.trigger(CHANNEL_EVENTS.close, \"leave\");\n      };\n      var leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n      leavePush.receive(\"ok\", function () {\n        return onClose();\n      }).receive(\"timeout\", function () {\n        return onClose();\n      });\n      leavePush.send();\n      if (!this.canPush()) {\n        leavePush.trigger(\"ok\", {});\n      }\n\n      return leavePush;\n    }\n\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling\n     * before dispatching to the channel callbacks.\n     *\n     * Must return the payload, modified or unmodified\n     */\n\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(event, payload, ref) {\n      return payload;\n    }\n\n    // private\n\n  }, {\n    key: \"isMember\",\n    value: function isMember(topic, event, payload, joinRef) {\n      if (this.topic !== topic) {\n        return false;\n      }\n      var isLifecycleEvent = CHANNEL_LIFECYCLE_EVENTS.indexOf(event) >= 0;\n\n      if (joinRef && isLifecycleEvent && joinRef !== this.joinRef()) {\n        this.socket.log(\"channel\", \"dropping outdated message\", { topic: topic, event: event, payload: payload, joinRef: joinRef });\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"joinRef\",\n    value: function joinRef() {\n      return this.joinPush.ref;\n    }\n  }, {\n    key: \"sendJoin\",\n    value: function sendJoin(timeout) {\n      this.state = CHANNEL_STATES.joining;\n      this.joinPush.resend(timeout);\n    }\n  }, {\n    key: \"rejoin\",\n    value: function rejoin() {\n      var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.timeout;\n      if (this.isLeaving()) {\n        return;\n      }\n      this.sendJoin(timeout);\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(event, payload, ref, joinRef) {\n      var _this4 = this;\n\n      var handledPayload = this.onMessage(event, payload, ref, joinRef);\n      if (payload && !handledPayload) {\n        throw \"channel onMessage callbacks must return the payload, modified or unmodified\";\n      }\n\n      this.bindings.filter(function (bind) {\n        return bind.event === event;\n      }).map(function (bind) {\n        return bind.callback(handledPayload, ref, joinRef || _this4.joinRef());\n      });\n    }\n  }, {\n    key: \"replyEventName\",\n    value: function replyEventName(ref) {\n      return \"chan_reply_\" + ref;\n    }\n  }, {\n    key: \"isClosed\",\n    value: function isClosed() {\n      return this.state === CHANNEL_STATES.closed;\n    }\n  }, {\n    key: \"isErrored\",\n    value: function isErrored() {\n      return this.state === CHANNEL_STATES.errored;\n    }\n  }, {\n    key: \"isJoined\",\n    value: function isJoined() {\n      return this.state === CHANNEL_STATES.joined;\n    }\n  }, {\n    key: \"isJoining\",\n    value: function isJoining() {\n      return this.state === CHANNEL_STATES.joining;\n    }\n  }, {\n    key: \"isLeaving\",\n    value: function isLeaving() {\n      return this.state === CHANNEL_STATES.leaving;\n    }\n  }]);\n\n  return Channel;\n}();\n\nvar Serializer = {\n  encode: function encode(msg, callback) {\n    var payload = [msg.join_ref, msg.ref, msg.topic, msg.event, msg.payload];\n    return callback(JSON.stringify(payload));\n  },\n  decode: function decode(rawPayload, callback) {\n    var _JSON$parse = JSON.parse(rawPayload),\n        _JSON$parse2 = _slicedToArray(_JSON$parse, 5),\n        join_ref = _JSON$parse2[0],\n        ref = _JSON$parse2[1],\n        topic = _JSON$parse2[2],\n        event = _JSON$parse2[3],\n        payload = _JSON$parse2[4];\n\n    return callback({ join_ref: join_ref, ref: ref, topic: topic, event: event, payload: payload });\n  }\n};\n\n/** Initializes the Socket\n *\n *\n * For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\n *\n * @param {string} endPoint - The string WebSocket endpoint, ie, `\"ws://example.com/socket\"`,\n *                                               `\"wss://example.com\"`\n *                                               `\"/socket\"` (inherited host & protocol)\n * @param {Object} opts - Optional configuration\n * @param {string} opts.transport - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.\n *\n * Defaults to WebSocket with automatic LongPoll fallback.\n * @param {Function} opts.encode - The function to encode outgoing messages.\n *\n * Defaults to JSON:\n *\n * ```javascript\n * (payload, callback) => callback(JSON.stringify(payload))\n * ```\n *\n * @param {Function} opts.decode - The function to decode incoming messages.\n *\n * Defaults to JSON:\n *\n * ```javascript\n * (payload, callback) => callback(JSON.parse(payload))\n * ```\n *\n * @param {number} opts.timeout - The default timeout in milliseconds to trigger push timeouts.\n *\n * Defaults `DEFAULT_TIMEOUT`\n * @param {number} opts.heartbeatIntervalMs - The millisec interval to send a heartbeat message\n * @param {number} opts.reconnectAfterMs - The optional function that returns the millsec reconnect interval.\n *\n * Defaults to stepped backoff of:\n *\n * ```javascript\n *  function(tries){\n *    return [1000, 5000, 10000][tries - 1] || 10000\n *  }\n * ```\n * @param {Function} opts.logger - The optional function for specialized logging, ie:\n * ```javascript\n * logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n * ```\n *\n * @param {number}  opts.longpollerTimeout - The maximum timeout of a long poll AJAX request.\n *\n * Defaults to 20s (double the server long poll timer).\n *\n * @param {Object}  opts.params - The optional params to pass when connecting\n *\n *\n*/\n\nvar Socket = exports.Socket = function () {\n  function Socket(endPoint) {\n    var _this5 = this;\n\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Socket);\n\n    this.stateChangeCallbacks = { open: [], close: [], error: [], message: [] };\n    this.channels = [];\n    this.sendBuffer = [];\n    this.ref = 0;\n    this.timeout = opts.timeout || DEFAULT_TIMEOUT;\n    this.transport = opts.transport || window.WebSocket || LongPoll;\n    this.defaultEncoder = Serializer.encode;\n    this.defaultDecoder = Serializer.decode;\n    if (this.transport !== LongPoll) {\n      this.encode = opts.encode || this.defaultEncoder;\n      this.decode = opts.decode || this.defaultDecoder;\n    } else {\n      this.encode = this.defaultEncoder;\n      this.decode = this.defaultDecoder;\n    }\n    this.heartbeatIntervalMs = opts.heartbeatIntervalMs || 30000;\n    this.reconnectAfterMs = opts.reconnectAfterMs || function (tries) {\n      return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n    };\n    this.logger = opts.logger || function () {}; // noop\n    this.longpollerTimeout = opts.longpollerTimeout || 20000;\n    this.params = opts.params || {};\n    this.endPoint = endPoint + \"/\" + TRANSPORTS.websocket;\n    this.heartbeatTimer = null;\n    this.pendingHeartbeatRef = null;\n    this.reconnectTimer = new Timer(function () {\n      _this5.disconnect(function () {\n        return _this5.connect();\n      });\n    }, this.reconnectAfterMs);\n  }\n\n  _createClass(Socket, [{\n    key: \"protocol\",\n    value: function protocol() {\n      return location.protocol.match(/^https/) ? \"wss\" : \"ws\";\n    }\n  }, {\n    key: \"endPointURL\",\n    value: function endPointURL() {\n      var uri = Ajax.appendParams(Ajax.appendParams(this.endPoint, this.params), { vsn: VSN });\n      if (uri.charAt(0) !== \"/\") {\n        return uri;\n      }\n      if (uri.charAt(1) === \"/\") {\n        return this.protocol() + \":\" + uri;\n      }\n\n      return this.protocol() + \"://\" + location.host + uri;\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect(callback, code, reason) {\n      if (this.conn) {\n        this.conn.onclose = function () {}; // noop\n        if (code) {\n          this.conn.close(code, reason || \"\");\n        } else {\n          this.conn.close();\n        }\n        this.conn = null;\n      }\n      callback && callback();\n    }\n\n    /**\n     *\n     * @param {Object} params - The params to send when connecting, for example `{user_id: userToken}`\n     */\n\n  }, {\n    key: \"connect\",\n    value: function connect(params) {\n      var _this6 = this;\n\n      if (params) {\n        console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\");\n        this.params = params;\n      }\n      if (this.conn) {\n        return;\n      }\n\n      this.conn = new this.transport(this.endPointURL());\n      this.conn.timeout = this.longpollerTimeout;\n      this.conn.onopen = function () {\n        return _this6.onConnOpen();\n      };\n      this.conn.onerror = function (error) {\n        return _this6.onConnError(error);\n      };\n      this.conn.onmessage = function (event) {\n        return _this6.onConnMessage(event);\n      };\n      this.conn.onclose = function (event) {\n        return _this6.onConnClose(event);\n      };\n    }\n\n    /**\n     * Logs the message. Override `this.logger` for specialized logging. noops by default\n     * @param {string} kind\n     * @param {string} msg\n     * @param {Object} data\n     */\n\n  }, {\n    key: \"log\",\n    value: function log(kind, msg, data) {\n      this.logger(kind, msg, data);\n    }\n\n    // Registers callbacks for connection state change events\n    //\n    // Examples\n    //\n    //    socket.onError(function(error){ alert(\"An error occurred\") })\n    //\n\n  }, {\n    key: \"onOpen\",\n    value: function onOpen(callback) {\n      this.stateChangeCallbacks.open.push(callback);\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(callback) {\n      this.stateChangeCallbacks.close.push(callback);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(callback) {\n      this.stateChangeCallbacks.error.push(callback);\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(callback) {\n      this.stateChangeCallbacks.message.push(callback);\n    }\n  }, {\n    key: \"onConnOpen\",\n    value: function onConnOpen() {\n      var _this7 = this;\n\n      this.log(\"transport\", \"connected to \" + this.endPointURL());\n      this.flushSendBuffer();\n      this.reconnectTimer.reset();\n      if (!this.conn.skipHeartbeat) {\n        clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(function () {\n          return _this7.sendHeartbeat();\n        }, this.heartbeatIntervalMs);\n      }\n      this.stateChangeCallbacks.open.forEach(function (callback) {\n        return callback();\n      });\n    }\n  }, {\n    key: \"onConnClose\",\n    value: function onConnClose(event) {\n      this.log(\"transport\", \"close\", event);\n      this.triggerChanError();\n      clearInterval(this.heartbeatTimer);\n      this.reconnectTimer.scheduleTimeout();\n      this.stateChangeCallbacks.close.forEach(function (callback) {\n        return callback(event);\n      });\n    }\n  }, {\n    key: \"onConnError\",\n    value: function onConnError(error) {\n      this.log(\"transport\", error);\n      this.triggerChanError();\n      this.stateChangeCallbacks.error.forEach(function (callback) {\n        return callback(error);\n      });\n    }\n  }, {\n    key: \"triggerChanError\",\n    value: function triggerChanError() {\n      this.channels.forEach(function (channel) {\n        return channel.trigger(CHANNEL_EVENTS.error);\n      });\n    }\n  }, {\n    key: \"connectionState\",\n    value: function connectionState() {\n      switch (this.conn && this.conn.readyState) {\n        case SOCKET_STATES.connecting:\n          return \"connecting\";\n        case SOCKET_STATES.open:\n          return \"open\";\n        case SOCKET_STATES.closing:\n          return \"closing\";\n        default:\n          return \"closed\";\n      }\n    }\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      return this.connectionState() === \"open\";\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(channel) {\n      this.channels = this.channels.filter(function (c) {\n        return c.joinRef() !== channel.joinRef();\n      });\n    }\n  }, {\n    key: \"channel\",\n    value: function channel(topic) {\n      var chanParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var chan = new Channel(topic, chanParams, this);\n      this.channels.push(chan);\n      return chan;\n    }\n  }, {\n    key: \"push\",\n    value: function push(data) {\n      var _this8 = this;\n\n      var topic = data.topic,\n          event = data.event,\n          payload = data.payload,\n          ref = data.ref,\n          join_ref = data.join_ref;\n\n      var callback = function callback() {\n        _this8.encode(data, function (result) {\n          _this8.conn.send(result);\n        });\n      };\n      this.log(\"push\", topic + \" \" + event + \" (\" + join_ref + \", \" + ref + \")\", payload);\n      if (this.isConnected()) {\n        callback();\n      } else {\n        this.sendBuffer.push(callback);\n      }\n    }\n\n    /**\n     * Return the next message ref, accounting for overflows\n     */\n\n  }, {\n    key: \"makeRef\",\n    value: function makeRef() {\n      var newRef = this.ref + 1;\n      if (newRef === this.ref) {\n        this.ref = 0;\n      } else {\n        this.ref = newRef;\n      }\n\n      return this.ref.toString();\n    }\n  }, {\n    key: \"sendHeartbeat\",\n    value: function sendHeartbeat() {\n      if (!this.isConnected()) {\n        return;\n      }\n      if (this.pendingHeartbeatRef) {\n        this.pendingHeartbeatRef = null;\n        this.log(\"transport\", \"heartbeat timeout. Attempting to re-establish connection\");\n        this.conn.close(WS_CLOSE_NORMAL, \"hearbeat timeout\");\n        return;\n      }\n      this.pendingHeartbeatRef = this.makeRef();\n      this.push({ topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: this.pendingHeartbeatRef });\n    }\n  }, {\n    key: \"flushSendBuffer\",\n    value: function flushSendBuffer() {\n      if (this.isConnected() && this.sendBuffer.length > 0) {\n        this.sendBuffer.forEach(function (callback) {\n          return callback();\n        });\n        this.sendBuffer = [];\n      }\n    }\n  }, {\n    key: \"onConnMessage\",\n    value: function onConnMessage(rawMessage) {\n      var _this9 = this;\n\n      this.decode(rawMessage.data, function (msg) {\n        var topic = msg.topic,\n            event = msg.event,\n            payload = msg.payload,\n            ref = msg.ref,\n            join_ref = msg.join_ref;\n\n        if (ref && ref === _this9.pendingHeartbeatRef) {\n          _this9.pendingHeartbeatRef = null;\n        }\n\n        _this9.log(\"receive\", (payload.status || \"\") + \" \" + topic + \" \" + event + \" \" + (ref && \"(\" + ref + \")\" || \"\"), payload);\n        _this9.channels.filter(function (channel) {\n          return channel.isMember(topic, event, payload, join_ref);\n        }).forEach(function (channel) {\n          return channel.trigger(event, payload, ref, join_ref);\n        });\n        _this9.stateChangeCallbacks.message.forEach(function (callback) {\n          return callback(msg);\n        });\n      });\n    }\n  }]);\n\n  return Socket;\n}();\n\nvar LongPoll = exports.LongPoll = function () {\n  function LongPoll(endPoint) {\n    _classCallCheck(this, LongPoll);\n\n    this.endPoint = null;\n    this.token = null;\n    this.skipHeartbeat = true;\n    this.onopen = function () {}; // noop\n    this.onerror = function () {}; // noop\n    this.onmessage = function () {}; // noop\n    this.onclose = function () {}; // noop\n    this.pollEndpoint = this.normalizeEndpoint(endPoint);\n    this.readyState = SOCKET_STATES.connecting;\n\n    this.poll();\n  }\n\n  _createClass(LongPoll, [{\n    key: \"normalizeEndpoint\",\n    value: function normalizeEndpoint(endPoint) {\n      return endPoint.replace(\"ws://\", \"http://\").replace(\"wss://\", \"https://\").replace(new RegExp(\"(.*)\\/\" + TRANSPORTS.websocket), \"$1/\" + TRANSPORTS.longpoll);\n    }\n  }, {\n    key: \"endpointURL\",\n    value: function endpointURL() {\n      return Ajax.appendParams(this.pollEndpoint, { token: this.token });\n    }\n  }, {\n    key: \"closeAndRetry\",\n    value: function closeAndRetry() {\n      this.close();\n      this.readyState = SOCKET_STATES.connecting;\n    }\n  }, {\n    key: \"ontimeout\",\n    value: function ontimeout() {\n      this.onerror(\"timeout\");\n      this.closeAndRetry();\n    }\n  }, {\n    key: \"poll\",\n    value: function poll() {\n      var _this10 = this;\n\n      if (!(this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting)) {\n        return;\n      }\n\n      Ajax.request(\"GET\", this.endpointURL(), \"application/json\", null, this.timeout, this.ontimeout.bind(this), function (resp) {\n        if (resp) {\n          var status = resp.status,\n              token = resp.token,\n              messages = resp.messages;\n\n          _this10.token = token;\n        } else {\n          var status = 0;\n        }\n\n        switch (status) {\n          case 200:\n            messages.forEach(function (msg) {\n              return _this10.onmessage({ data: msg });\n            });\n            _this10.poll();\n            break;\n          case 204:\n            _this10.poll();\n            break;\n          case 410:\n            _this10.readyState = SOCKET_STATES.open;\n            _this10.onopen();\n            _this10.poll();\n            break;\n          case 0:\n          case 500:\n            _this10.onerror();\n            _this10.closeAndRetry();\n            break;\n          default:\n            throw \"unhandled poll status \" + status;\n        }\n      });\n    }\n  }, {\n    key: \"send\",\n    value: function send(body) {\n      var _this11 = this;\n\n      Ajax.request(\"POST\", this.endpointURL(), \"application/json\", body, this.timeout, this.onerror.bind(this, \"timeout\"), function (resp) {\n        if (!resp || resp.status !== 200) {\n          _this11.onerror(resp && resp.status);\n          _this11.closeAndRetry();\n        }\n      });\n    }\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.readyState = SOCKET_STATES.closed;\n      this.onclose();\n    }\n  }]);\n\n  return LongPoll;\n}();\n\nvar Ajax = exports.Ajax = function () {\n  function Ajax() {\n    _classCallCheck(this, Ajax);\n  }\n\n  _createClass(Ajax, null, [{\n    key: \"request\",\n    value: function request(method, endPoint, accept, body, timeout, ontimeout, callback) {\n      if (window.XDomainRequest) {\n        var req = new XDomainRequest(); // IE8, IE9\n        this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback);\n      } else {\n        var _req = window.XMLHttpRequest ? new window.XMLHttpRequest() : // IE7+, Firefox, Chrome, Opera, Safari\n        new ActiveXObject(\"Microsoft.XMLHTTP\"); // IE6, IE5\n        this.xhrRequest(_req, method, endPoint, accept, body, timeout, ontimeout, callback);\n      }\n    }\n  }, {\n    key: \"xdomainRequest\",\n    value: function xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback) {\n      var _this12 = this;\n\n      req.timeout = timeout;\n      req.open(method, endPoint);\n      req.onload = function () {\n        var response = _this12.parseJSON(req.responseText);\n        callback && callback(response);\n      };\n      if (ontimeout) {\n        req.ontimeout = ontimeout;\n      }\n\n      // Work around bug in IE9 that requires an attached onprogress handler\n      req.onprogress = function () {};\n\n      req.send(body);\n    }\n  }, {\n    key: \"xhrRequest\",\n    value: function xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback) {\n      var _this13 = this;\n\n      req.open(method, endPoint, true);\n      req.timeout = timeout;\n      req.setRequestHeader(\"Content-Type\", accept);\n      req.onerror = function () {\n        callback && callback(null);\n      };\n      req.onreadystatechange = function () {\n        if (req.readyState === _this13.states.complete && callback) {\n          var response = _this13.parseJSON(req.responseText);\n          callback(response);\n        }\n      };\n      if (ontimeout) {\n        req.ontimeout = ontimeout;\n      }\n\n      req.send(body);\n    }\n  }, {\n    key: \"parseJSON\",\n    value: function parseJSON(resp) {\n      if (!resp || resp === \"\") {\n        return null;\n      }\n\n      try {\n        return JSON.parse(resp);\n      } catch (e) {\n        console && console.log(\"failed to parse JSON response\", resp);\n        return null;\n      }\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(obj, parentKey) {\n      var queryStr = [];\n      for (var key in obj) {\n        if (!obj.hasOwnProperty(key)) {\n          continue;\n        }\n        var paramKey = parentKey ? parentKey + \"[\" + key + \"]\" : key;\n        var paramVal = obj[key];\n        if ((typeof paramVal === \"undefined\" ? \"undefined\" : _typeof(paramVal)) === \"object\") {\n          queryStr.push(this.serialize(paramVal, paramKey));\n        } else {\n          queryStr.push(encodeURIComponent(paramKey) + \"=\" + encodeURIComponent(paramVal));\n        }\n      }\n      return queryStr.join(\"&\");\n    }\n  }, {\n    key: \"appendParams\",\n    value: function appendParams(url, params) {\n      if (Object.keys(params).length === 0) {\n        return url;\n      }\n\n      var prefix = url.match(/\\?/) ? \"&\" : \"?\";\n      return \"\" + url + prefix + this.serialize(params);\n    }\n  }]);\n\n  return Ajax;\n}();\n\nAjax.states = { complete: 4 };\n\nvar Presence = exports.Presence = {\n  syncState: function syncState(currentState, newState, onJoin, onLeave) {\n    var _this14 = this;\n\n    var state = this.clone(currentState);\n    var joins = {};\n    var leaves = {};\n\n    this.map(state, function (key, presence) {\n      if (!newState[key]) {\n        leaves[key] = presence;\n      }\n    });\n    this.map(newState, function (key, newPresence) {\n      var currentPresence = state[key];\n      if (currentPresence) {\n        var newRefs = newPresence.metas.map(function (m) {\n          return m.phx_ref;\n        });\n        var curRefs = currentPresence.metas.map(function (m) {\n          return m.phx_ref;\n        });\n        var joinedMetas = newPresence.metas.filter(function (m) {\n          return curRefs.indexOf(m.phx_ref) < 0;\n        });\n        var leftMetas = currentPresence.metas.filter(function (m) {\n          return newRefs.indexOf(m.phx_ref) < 0;\n        });\n        if (joinedMetas.length > 0) {\n          joins[key] = newPresence;\n          joins[key].metas = joinedMetas;\n        }\n        if (leftMetas.length > 0) {\n          leaves[key] = _this14.clone(currentPresence);\n          leaves[key].metas = leftMetas;\n        }\n      } else {\n        joins[key] = newPresence;\n      }\n    });\n    return this.syncDiff(state, { joins: joins, leaves: leaves }, onJoin, onLeave);\n  },\n  syncDiff: function syncDiff(currentState, _ref2, onJoin, onLeave) {\n    var joins = _ref2.joins,\n        leaves = _ref2.leaves;\n\n    var state = this.clone(currentState);\n    if (!onJoin) {\n      onJoin = function onJoin() {};\n    }\n    if (!onLeave) {\n      onLeave = function onLeave() {};\n    }\n\n    this.map(joins, function (key, newPresence) {\n      var currentPresence = state[key];\n      state[key] = newPresence;\n      if (currentPresence) {\n        var _state$key$metas;\n\n        (_state$key$metas = state[key].metas).unshift.apply(_state$key$metas, _toConsumableArray(currentPresence.metas));\n      }\n      onJoin(key, currentPresence, newPresence);\n    });\n    this.map(leaves, function (key, leftPresence) {\n      var currentPresence = state[key];\n      if (!currentPresence) {\n        return;\n      }\n      var refsToRemove = leftPresence.metas.map(function (m) {\n        return m.phx_ref;\n      });\n      currentPresence.metas = currentPresence.metas.filter(function (p) {\n        return refsToRemove.indexOf(p.phx_ref) < 0;\n      });\n      onLeave(key, currentPresence, leftPresence);\n      if (currentPresence.metas.length === 0) {\n        delete state[key];\n      }\n    });\n    return state;\n  },\n  list: function list(presences, chooser) {\n    if (!chooser) {\n      chooser = function chooser(key, pres) {\n        return pres;\n      };\n    }\n\n    return this.map(presences, function (key, presence) {\n      return chooser(key, presence);\n    });\n  },\n\n\n  // private\n\n  map: function map(obj, func) {\n    return Object.getOwnPropertyNames(obj).map(function (key) {\n      return func(key, obj[key]);\n    });\n  },\n  clone: function clone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n};\n\n/**\n *\n * Creates a timer that accepts a `timerCalc` function to perform\n * calculated timeout retries, such as exponential backoff.\n *\n * ## Examples\n *\n * ```javascript\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n * ```\n * @param {Function} callback\n * @param {Function} timerCalc\n */\n\nvar Timer = function () {\n  function Timer(callback, timerCalc) {\n    _classCallCheck(this, Timer);\n\n    this.callback = callback;\n    this.timerCalc = timerCalc;\n    this.timer = null;\n    this.tries = 0;\n  }\n\n  _createClass(Timer, [{\n    key: \"reset\",\n    value: function reset() {\n      this.tries = 0;\n      clearTimeout(this.timer);\n    }\n\n    /**\n     * Cancels any previous scheduleTimeout and schedules callback\n     */\n\n  }, {\n    key: \"scheduleTimeout\",\n    value: function scheduleTimeout() {\n      var _this15 = this;\n\n      clearTimeout(this.timer);\n\n      this.timer = setTimeout(function () {\n        _this15.tries = _this15.tries + 1;\n        _this15.callback();\n      }, this.timerCalc(this.tries + 1));\n    }\n  }]);\n\n  return Timer;\n}();\n\n})));\n","import deepCompact from 'deep-compact';\n\nconst k_r_submitter = /^(?:submit|button|image|reset|file)$/i;\nconst k_r_success_contrls = /^(?:input|select|textarea|keygen)/i;\nconst brackets = /(\\[[^\\[\\]]*\\])/g;\n\n// Matches IE Polyfill\nif (!Element.prototype.matches) Element.prototype.matches = Element.prototype.msMatchesSelector;\n\nexport function needValidation(element, target) {\n  if (element.dataset.franktNoValidate !== undefined) return false;\n  return target.nodeName === \"FORM\" && !target.checkValidity();\n}\n\nfunction parse_keys(string) {\n  const keys = [];\n  const prefix = /^([^\\[\\]]*)/;\n  const children = new RegExp(brackets);\n  let match = prefix.exec(string);\n\n  if (match[1]) {\n    keys.push(match[1]);\n  }\n\n  while ((match = children.exec(string)) !== null) {\n    keys.push(match[1]);\n  }\n\n  return keys;\n}\n\n\nfunction hash_assign(result, keys, value) {\n  if (keys.length === 0) {\n    result = value;\n    return result;\n  }\n\n  const key = keys.shift();\n  const between = key.match(/^\\[(.+?)\\]$/);\n\n  if (key === '[]') {\n    result = result || [];\n\n    if (Array.isArray(result)) {\n      result.push(hash_assign(null, keys, value));\n    } else {\n      // This might be the result of bad name attributes like \"[][foo]\",\n      // in this case the original `result` object will already be\n      // assigned to an object literal. Rather than coerce the object to\n      // an array, or cause an exception the attribute \"_values\" is\n      // assigned as an array.\n      result._values = result._values || [];\n      result._values.push(hash_assign(null, keys, value));\n    }\n\n    return result;\n  }\n\n  // Key is an attribute name and can be assigned directly.\n  if (!between) {\n    result[key] = hash_assign(result[key], keys, value);\n  } else {\n    const string = between[1];\n    // +var converts the variable into a number\n    // better than parseInt because it doesn't truncate away trailing\n    // letters and actually fails if whole thing is not a number\n    const index = +string;\n\n    // If the characters between the brackets is not a number it is an\n    // attribute name and can be assigned directly.\n    if (isNaN(index)) {\n      result = result || {};\n      result[string] = hash_assign(result[string], keys, value);\n    } else {\n      result = result || [];\n      result[index] = hash_assign(result[index], keys, value);\n    }\n  }\n\n  return result;\n}\n\n// Object/hash encoding serializer.\nfunction serializer(result, key, value) {\n  const matches = key.match(brackets);\n\n  // Has brackets? Use the recursive assignment function to walk the keys,\n  // construct any missing objects in the result tree and make the assignment\n  // at the end of the chain.\n  if (matches) {\n    const keys = parse_keys(key);\n    hash_assign(result, keys, value);\n  } else {\n    // Non bracket notation can make assignments directly.\n    const existing = result[key];\n\n    // If the value has been assigned already (for instance when a radio and\n    // a checkbox have the same name attribute) convert the previous value\n    // into an array before pushing into it.\n    //\n    // NOTE: If this requirement were removed all hash creation and\n    // assignment could go through `hash_assign`.\n    if (existing) {\n      if (!Array.isArray(existing)) {\n        result[key] = [existing];\n      }\n      result[key].push(value);\n    } else {\n      result[key] = value;\n    }\n  }\n\n  return result;\n}\n\n// serializes form fields\n// @param form MUST be an HTMLForm element\n// @param options is an optional argument to configure the serialization.\n//  - serializer: [function] Optional serializer function to override the default one.\n//  The function takes 3 arguments (result, key, value) and should return new result\n//  hash and url encoded str serializers are provided with this module\n//  - disabled: [true | false]. If true serialize disabled fields.\n//  - empty: [true | false]. If true serialize empty fields\nexport function serialize(form, options) {\n  const elements = form && form.elements ? form.elements : [];\n  let result = {};\n\n  //Object store each radio and set if it's empty or not\n  const radio_store = {};\n\n  for (let i = 0; i < elements.length; ++i) {\n    var element = elements[i];\n\n    // ingore disabled fields\n    if ((!options.disabled && element.disabled) || !element.name) {\n      continue;\n    }\n    // ignore anyhting that is not considered a success field\n    if (!k_r_success_contrls.test(element.nodeName) ||\n      k_r_submitter.test(element.type)) {\n      continue;\n    }\n\n    var key = element.name;\n    var val = element.value;\n\n    // we can't just use element.value for checkboxes cause some browsers lie to us\n    // they say \"on\" for value when the box isn't checked\n    if ((element.type === 'checkbox' || element.type === 'radio') && !element.checked) {\n      val = undefined;\n    }\n\n    // If we want empty elements\n    if (options.empty) {\n      // for checkbox\n      if (element.type === 'checkbox' && !element.checked) {\n        val = '';\n      }\n\n      // for radio\n      if (element.type === 'radio') {\n        if (!radio_store[element.name] && !element.checked) {\n          radio_store[element.name] = false;\n        } else if (element.checked) {\n          radio_store[element.name] = true;\n        }\n      }\n\n      // if options empty is true, continue only if its radio\n      if (val == undefined && element.type == 'radio') {\n        continue;\n      }\n    } else {\n      // value-less fields are ignored unless options.empty is true\n      if (!val) {\n        continue;\n      }\n    }\n\n    // multi select boxes\n    if (element.type === 'select-multiple') {\n      val = [];\n\n      var selectOptions = element.options;\n      var isSelectedOptions = false;\n      for (let j = 0; j < selectOptions.length; ++j) {\n        var option = selectOptions[j];\n        var allowedEmpty = options.empty && !option.value;\n        var hasValue = (option.value || allowedEmpty);\n        if (option.selected && hasValue) {\n          isSelectedOptions = true;\n\n          // If using a hash serializer be sure to add the\n          // correct notation for an array in the multi-select\n          // context. Here the name attribute on the select element\n          // might be missing the trailing bracket pair. Both names\n          // \"foo\" and \"foo[]\" should be arrays.\n          if (key.slice(key.length - 2) !== '[]') {\n            result = serializer(result, key + '[]', option.value);\n          } else {\n            result = serializer(result, key, option.value);\n          }\n        }\n      }\n\n      // Serialize if no selected options and options.empty is true\n      if (!isSelectedOptions && options.empty) {\n        result = serializer(result, key, '');\n      }\n\n      continue;\n    }\n\n    result = serializer(result, key, val);\n  }\n\n  // Check for all empty radio buttons and serialize them with key=\"\"\n  if (options.empty) {\n    for (let key in radio_store) {\n      if (!radio_store[key]) {\n        result = serializer(result, key, '');\n      }\n    }\n  }\n\n  return deepCompact(result);\n}\n\nexport function serializeElement(element) {\n  if (element) {\n    return serializer({}, element.name, element.value);\n  } else {\n    console.log('Element not found', element);\n    return {};\n  }\n}\n\nexport function blockSubmit(e) {\n  if (e.key === \"Enter\") {\n    e.preventDefault();\n    e.target.removeEventListener(e.type, this);\n    return false;\n  }\n}\n","import * as Dom from './dom';\nimport {\n  Socket\n} from 'phoenix';\n\nexport let channel = {};\n\nexport function sendMsg(action, data) {\n  return channel.push('frankt-action', {\n    action: action,\n    data: data\n  });\n}\n\nexport function serializeForm(element) {\n  const data = [{}];\n\n  if (element.name && element.tagName !== \"INPUT\") {\n    data.push(Dom.serializeElement(element));\n  }\n\n  if (element.dataset.franktData) {\n    data.push(JSON.parse(element.dataset.franktData));\n  }\n\n  if (element.dataset.franktTarget) {\n    const target = document.querySelector(element.dataset.franktTarget);\n    // Block submit form on enter\n    target.addEventListener('keydown', Dom.blockSubmit, true);\n\n    if (Dom.needValidation(element, target)) {\n      return target.reportValidity();\n    }\n\n    data.push(Dom.serialize(target, {\n      hash: true\n    }));\n  }\n\n  return Object.assign(...data);\n}\n\nfunction handleEvent(e, selector) {\n  if (e.target.matches(selector) || e.target.closest(selector)) {\n    const target = e.target.matches(selector) ? e.target : e.target.closest(selector);\n    e.preventDefault();\n    const data = serializeForm(target);\n    if (data) sendMsg(target.dataset.franktAction, data);\n    return false;\n  }\n}\n\nfunction attachResponses() {\n  channel.on(\"redirect\", (res) => window.location = res.target);\n  channel.on(\"replace_with\", (res) => document.querySelector(res.target).outerHTML = res.html);\n  channel.on(\"append\", (res) => document.querySelector(res.target).insertAdjacentHTML('beforeend', res.html));\n  channel.on(\"prepend\", (res) => document.querySelector(res.target).insertAdjacentHTML('afterbegin', res.html));\n  channel.on(\"mod_class\", (res) => {\n    for (const element of document.querySelectorAll(res.target)) {\n      element.classList[res.action](res.klass);\n    }\n  });\n}\n\nfunction attachEvents() {\n  document.addEventListener('click', (e) => handleEvent(e, '[data-frankt-action]:not(input)'), true);\n  document.addEventListener('change', (e) => handleEvent(e, '[data-frankt-action]'), true);\n  document.addEventListener('submit', (e) => handleEvent(e, '[data-frankt-action]'), true);\n  document.addEventListener('keyup', (e) => handleEvent(e, '[data-frankt-auto]'), true);\n}\n\n// Connect to the socket and join the Frankt channel.\nexport function connect(channel_name, socket_params) {\n  const socket = new Socket('/socket', {\n    params: socket_params\n  });\n  socket.connect();\n  channel = socket.channel(channel_name, {});\n  return channel.join()\n    .receive(\"ok\", res => {\n      attachEvents();\n      attachResponses();\n      console.log(\"Connected to Frankt\");\n    })\n    .receive(\"error\", res => console.log(\"Unable to connect to Frankt\", res));\n};\n","import * as Frankt from 'frankt';\n\nwindow.onload = function () {\n  const channel_tag = document.querySelector(\"meta[name=channel]\");\n\n  const socket_params = {\n    locale: document.querySelector('html').getAttribute('lang')\n  };\n\n  Frankt.connect(channel_tag.content, socket_params)\n    .receive(\"ok\", (res) => {\n      console.log('do your magic!', res);\n    });\n}\n","// extracted by mini-css-extract-plugin"],"sourceRoot":""}